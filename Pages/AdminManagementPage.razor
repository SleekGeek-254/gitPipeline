@page "/admin"

<PageTitle>Admin Management</PageTitle>

@using gitPipeline.Data

<style>
    h1 {
        font-size: 24px;
        margin-bottom: 16px;
    }

    p {
        margin-bottom: 16px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th {
        background-color: #f2f2f2;
        padding: 8px;
        text-align: left;
    }

    td {
        padding: 8px;
        border-bottom: 1px solid #ddd;
    }

    .btn {
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        cursor: pointer;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .btn-danger {
        background-color: #d9534f;
        border-color: #d43f3a;
        color: #fff;
    }

    .btn-primary {
        background-color: #337ab7;
        border-color: #2e6da4;
        color: #fff;
    }

    .form-group {
        margin-bottom: 16px;
    }

    label {
        display: block;
        margin-bottom: 8px;
    }

    input[type="date"],
    input[type="time"],
    input[type="number"],
    input[type="text"] {
        width: 100%;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>

<h1>Admin Management</h1>

<p>This page allows you to manage maintenance requests.</p>

@if (maintenanceRequests == null)
{
    <p><em>Loading...</em></p>
}
else if (maintenanceRequests.Count == 0)
{
    <p>No maintenance requests found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Time</th>
                <th>Duration</th>
                <th>Reason</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var maintenanceRequest in maintenanceRequests)
            {
                <tr>
                    <td>@maintenanceRequest.Date.ToShortDateString()</td>
                    <td>@maintenanceRequest.Time.ToShortTimeString()</td>
                    <td>@maintenanceRequest.Duration</td>
                    <td>@maintenanceRequest.Reason</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => CancelMaintenance(maintenanceRequest.Id)">Cancel</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="form-group">
    <h3>Schedule Maintenance</h3>
    <div>
        <label for="date">Date:</label>
        <input type="date" id="date" @bind="maintenanceRequest.Date" />

        <label for="time">Time:</label>
        <input type="time" id="time" @bind="maintenanceRequest.Time" />

        <label for="duration">Duration:</label>
        <input type="number" id="duration" @bind="maintenanceRequest.Duration" />

        <label for="reason">Reason:</label>
        <input type="text" id="reason" @bind="maintenanceRequest.Reason" />

        <button class="btn btn-primary" @onclick="ScheduleMaintenance">Schedule</button>
    </div>
</div>

@code {
    private List<MaintenanceRequest> maintenanceRequests;
    private MaintenanceRequest maintenanceRequest = new MaintenanceRequest();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CheckMaintenance();
    }

    private void CheckMaintenance()
    {
        // Same implementation as in AdminManagement.cs
    }

    private void ScheduleMaintenance()
    {
        // Same implementation as in AdminManagement.cs
    }

    private void CancelMaintenance(int maintenanceId)
    {
        // Same implementation as in AdminManagement.cs
    }
}
